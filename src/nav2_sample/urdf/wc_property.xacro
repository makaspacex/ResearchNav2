<?xml version="1.0"?>
<robot name="wheelchair_base" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- ****************** ROBOT CONSTANTS *******************************  -->
  <!-- Define the size of the robot's main chassis in meters -->
  <xacro:property name="base_width" value="0.435" />
  <xacro:property name="base_length" value="1.2" />
  <xacro:property name="base_height" value="0.65" />

  <!-- Define the shape of the robot's two back wheels in meters -->
  <xacro:property name="wheel_radius" value="0.27" />
  <xacro:property name="wheel_width" value="0.08" />
  <xacro:property name="wheel_ygap" value="${wheel_width/2+0.01}" />
  <xacro:property name="wheel_zoff" value="0.225" />
  <xacro:property name="wheel_xoff" value="0.325" />


  <xacro:property name="front_wheel_radius" value="0.17" />
  <xacro:property name="s_wheel_radius" value="0.19" />
  <xacro:property name="s_wheel_width" value="0.08" />
  <xacro:property name="s_wheel_ygap" value="${-0.002}" />
  <xacro:property name="s_wheel_zoff" value="${big_wheel_radius+wheel_zoff - s_wheel_radius/2}" />
  <xacro:property name="s_wheel_xoff" value="${wheel_xoff-0.5}" /> 
  
  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}" />
      <mass value="${m}" />
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}"
        iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}" />
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}"
        iyz="0" izz="${(m/2) * (r*r)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}" />
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0"
        izz="${(2/5) * m * (r*r)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="entity_material" params="color alpha">
    <material name="black">
      <color rgba="0.0 0.0 0.0 1.0" />
    </material>
  </xacro:macro>
  
  
  <xacro:property name="big_wheel_scale" value="${wheel_radius/0.275}" />
  <xacro:property name="big_wheel_radius" value="${wheel_radius * big_wheel_scale}" />
  <xacro:property name="s_wheel_scale" value="${front_wheel_radius/0.1905}" />
  <xacro:property name="s_wheel_radius" value="${front_wheel_radius * s_wheel_scale}" />

  <!-- <geometry name="wheel_stl">
    <mesh filename="package://nav2_sample/meshes/wheel.STL" scale="${27/29} ${27/29} ${27/29}"/>
  </geometry> -->

  <!-- *********************** DRIVE WHEELS ******************************  -->

  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <xacro:property name="wheel_scale" value="${wheel_radius/0.275}" />
      <visual>
          <origin xyz="0 0 0" rpy="0 0 ${y_reflect * pi/2}" />
          <geometry>
            <mesh filename="package://nav2_sample/meshes/wheel2.STL"
              scale="${wheel_scale} ${wheel_scale} ${wheel_scale}" />
          </geometry>
          <material name="light_black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}" />
    </link>
    <joint name="${prefix}_joint" type="revolute">
      <parent link="base_link" />
      <child link="${prefix}_link" />
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}"
        rpy="0 0 0" />
      <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0" />
      <axis xyz="0 1 0" />
    </joint>
  </xacro:macro>

  <xacro:macro name="samll_wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual name="small_wheel">
        <origin xyz="0 0 0" rpy="0 0 ${y_reflect * pi/2}" />
        <geometry>
          <mesh filename="package://nav2_sample/meshes/small_wheel.STL"
            scale="${s_wheel_scale} ${s_wheel_scale} ${s_wheel_scale}" />
        </geometry>
        <material name="light_black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${s_wheel_radius}" length="${s_wheel_width}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="110.5" r="${s_wheel_radius}" h="${s_wheel_width}" />
    </link>

    <joint name="${prefix}_joint" type="revolute">
      <parent link="base_link" />
      <child link="${prefix}_link" />
      <origin xyz="${x_reflect*s_wheel_xoff} ${y_reflect*(base_width/2+s_wheel_ygap)} ${-s_wheel_zoff}"
        rpy="0 0 0" />
      <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0" />
      <axis xyz="0 1 0" />
    </joint>
  </xacro:macro>

  <!-- Init colour -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0" />
  </material>

  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0" />
  </material>

  <material name="light_black">
    <color rgba="0.7 0.7 0.7 1.0" />
  </material>

  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0" />
  </material>

  <material name="light_blue">
    <color rgba="${0/255} ${0/255} ${255/255} 0.5" />
  </material>

  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0" />
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0" />
  </material>

  <material name="orange">
    <color rgba="1.0 0.4235 0.0392 1.0" />
  </material>

  <material name="brown">
    <color rgba="0.8706 0.8118 0.7647 1.0" />
  </material>

  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0" />
  </material>

  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0" />
  </material>


</robot>